# SPDX-FileCopyrightText: 2025 Contributors to the OpenSTEF project <short.term.energy.forecasts@alliander.com>
#
# SPDX-License-Identifier: MPL-2.0

[project]
name = "openstef"
version = "0.0.0"
description = "Open Short Term Energy forecasting library"
readme = "README.md"
requires-python = ">=3.12,<4.0"
license = { text = "MPL-2.0" }
authors = [
  { name = "Alliander N.V", email = "short.term.energy.forecasts@alliander.com" }
]
keywords = ["energy", "forecasting", "machinelearning"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
  "Programming Language :: Python :: 3.12",
]

dependencies = [
  "openstef-models",
  "openstef-beam",
]

[project.urls]
Homepage = "https://lfenergy.org/projects/openstef/"
Repository = "https://github.com/OpenSTEF/openstef"
Issues = "https://github.com/OpenSTEF/openstef/issues"
Documentation = "https://openstef.github.io/openstef/index.html"

[dependency-groups]
dev = [
    "poethepoet>=0.36.0",
    "reuse>=5.0.2",
    "ruff>=0.12.8",
]

[tool.uv.sources]
openstef-models = { workspace = true }
openstef-beam = { workspace = true }

[tool.uv.workspace]
members = [
    "packages/openstef-models",
    "packages/openstef-beam",
]

[tool.pyright]
include = ["tools", "examples"]
typeCheckingMode = "strict"
reportPrivateImportUsage = false
reportMissingTypeStubs = false

[tool.ruff]
extend = "./tools/ruff.toml"
include = ["examples/**/*.py"]
src = ["examples"]

[tool.poe]
include = "tools/poe.toml"

[tool.poe.tasks.reuse]
help = "Check REUSE compliance (with optional fix)"
args = [{name = "fix", type = "boolean", help = "Automatically fix REUSE compliance issues before lint check"}]
control.expr = "fix"
switch = [
    {case = "True", cmd = "uv run tools/reuse-fix.py --license \"MPL-2.0\" --copyright \"Contributors to the OpenSTEF project <short.term.energy.forecasts@alliander.com>\""},
    {cmd = "reuse lint"}
]

[tool.poe.tasks.all]
help = "Run all CI calls"
sequence = ["reuse", "format", "lint", "lock"]
ignore_fail = "return_non_zero"